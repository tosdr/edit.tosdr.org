<div class="form-login">
    <%= simple_form_for [@point] do |f| %>
    <div class="row">
      <div class="col-xs-6">
        <%= f.association :service, collection: Service.order('name ASC'), hint: "If your service isn't on the list, please contact the team" %>

      </div>
      <div class="col-xs-6">
        <%= f.association :case, collection: Case.order('title ASC'), hint: "What this point is saying about the service" %>
      </div>
    </div>
    <div class="row">
      <div class="col-xs-12">
        <%= f.input :title, placeholder: "Example: Does not track its users",  hint: "Give your point a short descriptive title (max 140 chars)" %>
      </div>
    </div>
    <div class="row">
      <div class="col-xs-12">
        <%= f.input :quoteDoc, hint: "Document to quote from" %>
        <%= f.input :quoteRev, hint: "Revision to quote from" %>
        <%= f.input :quoteStart, hint: "Start position of quote within the document" %>
        <%= f.input :quoteEnd, hint: "End position of quote within the document" %>
        <%= f.input :quoteText, placeholder: "...",  hint: "Select from the textarea below" %>
        <textarea id="ta"></textarea>
       <script>
          function fetchDocList() {
            return new Promise((resolve, reject) => {
              var xhr = new XMLHttpRequest()
              xhr.open('GET', 'https://api.github.com/repos/tosdr/tosback2/contents/crawl/' + encodeURIComponent('<%= @service_url %>'), true)
              xhr.onload = function() {
                try {
                  var docList = JSON.parse(xhr.response).map(i => i.name)
                  point_quoteDoc.value =  encodeURIComponent('<%= @service_url %>') + '/' + docList[0]
                  console.log('setting quoteDoc to first entry in docList', docList)
                  resolve()
                } catch (e) {
                  console.error(e)
                  reject()
                }
              }
              xhr.send()
            })
          }
          function fetchRevList() {
            return new Promise((resolve, reject) => {
              var xhr = new XMLHttpRequest()
              xhr.open('GET', 'https://api.github.com/repos/tosdr/tosback2/commits?path=crawl/'
                  + encodeURIComponent(point_quoteDoc.value), true)
              xhr.onload = function() {
                try {
                  var revList = JSON.parse(xhr.response).map(i => i.sha)
                  point_quoteRev.value =  revList[0]
                  console.log('setting quoteRev to first entry in revList', revList)
                  resolve()
                } catch (e) {
                  console.error(e)
                  reject()
                }
              }
              xhr.send()
            })
          }

          function fetchDoc() {
            var xhr = new XMLHttpRequest()
            xhr.open('GET', 'https://raw.githubusercontent.com/tosdr/tosback2/' + point_quoteRev.value + '/crawl/' + point_quoteDoc.value, true)
            xhr.onload = function() {
              ta.innerHTML = xhr.response
            }
            xhr.send()
          }
          console.log('fetching doc list')
          fetchDocList().then(() => {
            console.log('fetching rev list')
            return fetchRevList()
          }).then(() => {
            console.log('fetching doc contents')
            return fetchDoc()
          })

          point_quoteDoc.onchange = fetchDoc
          point_quoteRev.onchange = fetchDoc
          setInterval(function() {
            point_quoteStart.value = ta.selectionStart
            point_quoteEnd.value = ta.selectionEnd
            point_quoteText.value = ta.value.substring(ta.selectionStart, ta.selectionEnd)
          }, 250)
       </script>
      </div>
    </div>
    <div class="row">
      <div class="col-xs-12">
        <%= f.input :analysis, as: :text , input_html: { rows: 7, class: "text-area" }, placeholder: "Example: The privacy policy states that '...because this information could be used to link you to your searches, we do not log (store) it at all.'", hint: "Write your analysis and comments" %>
      </div>
    </div>
    <div class="row">
      <div class="col-xs-4">
        <%= f.input :source, placeholder: "Example: https://duckduckgo.com/privacy#s3", hint: "Where did you find it?" %>
      </div>
      <div class="col-xs-4">
        <%= f.input :rating, as: :radio_buttons, collection: [['blocker', 0], ['bad', 2], ['neutral', 5], ['good', 8]], hint: "Choose your rating" %>
      </div>
      <div class="col-xs-4">
        <% if current_user.curator? %>
        <%= f.input :status, collection: ["pending", "draft", "approved", "declined", "disputed"] %>
        <% else %>
        <%= f.input :status, collection: ["pending", "draft"], hint: "Choose pending for the curators to review your point" %>
        <% end %>
      </div>
    </div>
    <% if params[:action] == "edit" %>
    <div class="row">
      <div class="col-xs-12">
        <%= f.input :point_change, as: :text, input_html: { rows: 4, class: "text-area" }, hint: "Provide a reason for your changes to this analysis point." %>
      </div>
    </div>
    <% end %>
    <div class="row">
      <div class="form-actions col-xs-6 col-sm-2 col-md-2">
      <%= link_to "Back", :back, class: "btn btn-default" %>
      </div>
      <div class="form-actions col-xs-8 col-sm-4 col-sm-offset-6 col-md-3 col-md-offset-7">
        <%= f.submit "Submit", name: "only_create", class: 'btn btn-primary' %>
        <%= f.submit "Submit + Add Another", name: "create_add_another", class: 'btn btn-primary' %>
      </div>
    </div>
  <% end %>
</div>
</div>
